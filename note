+____				1+4*0=1
+    +____			2+4*1=6	
+    +    +____		3+4*2=11 -> x+bar_w*i	
+    +    +    +____4+4*3=16
0123456789ABCDEFG
 1    6    11   16 -> True                    								

15|                         
  |           xxxx            
  |           xxxx xxxx              
10| xxxx      xxxx xxxx                
  | xxxx xxxx xxxx xxxx                      
  | xxxx xxxx xxxx xxxx xxxx                    
 5| xxxx xxxx xxxx xxxx xxxx                     
  | xxxx xxxx xxxx xxxx xxxx                     
  |___________________________
 0   1    2    3    4    5


// TODO:
func define_pos(graph Graph, bar_w int) (Graph) {
	for i, bar := range(graph.bars) {
		var pos int = bar.x+(bar_w*i)
		graph.bars[i].pos = pos 
	}
	return graph
}

func bar_height(max_h int, screen_h int) (int) {
	return screen_h / max_h - (screen_h/10)
}

func generate_coords(graph Graph, bar_h int, bar_w, int) {
	var coords []Coords
	for i, bar := range(graph.bars) {
		coords = append(coords, bar)
		for j = 0; j < bar_w; j++ {
			var c = Coords{y:bar.y, x:bar.x+j}
			coords = append(coords, c)	
		}
	}
	fmt.Println(coords)
}



	var rows []string = strings.Split(file, "\n")
    var g = Graph{}
    rows = rows[:len(rows)-1]
    g.nbr_col = len(rows)
    
    var row_nbr int = 0 
    var col_nbr int = 1 
    for row_nbr < len(rows) {
        var row []string = strings.Split(rows[row_nbr], sep)
        val, err := strconv.Atoi(row[col_nbr])
        if err != nil {
            fmt.Println(err)
            os.Exit(1)
        }
        var bar = Bar{x: row_nbr, y: val}
        g.bars = append(g.bars, bar)
        row_nbr++
        if row_nbr == len(rows) && col_nbr != len(row) - 1 { 
            row_nbr = 0 
            col_nbr++
        }   
    }   
    fmt.Println(col_nbr)
    return g
